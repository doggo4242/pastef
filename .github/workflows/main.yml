name: Formatter updater

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 12 * * *"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: 'alpine:edge'
    
    steps:
      - uses: actions/checkout@v2

      - name: Get and compress formatters
        run: |
          apk update
          apk --no-cache upgrade
          apk --no-cache add gcc musl-dev binutils go cmake make alpine-sdk git g++ curl rust ninja jq
          mkdir $GITHUB_WORKSPACE/formatters
          cp $(which rustfmt) $GITHUB_WORKSPACE/formatters
          cp $(which gofmt) $GITHUB_WORKSPACE/formatters
          go get -u github.com/klauspost/asmfmt/cmd/asmfmt
          export GOPATH=$(go env | grep GOPATH | cut -d= -f2 | tr -d \")
          export PATH=$PATH:$GOPATH/bin
          cp $(which asmfmt) $GITHUB_WORKSPACE/formatters
          curl -L -s -o $GITHUB_WORKSPACE/formatters/ormolu $(echo "$(curl -s "https://api.github.com/repos/tweag/ormolu/releases/latest" | jq -c '.assets[]')" | while read i; do if echo "$(echo $i | jq -r '.name')" | grep 'Linux' >/dev/null; then echo $(echo $i | jq -r '.browser_download_url');fi done)
          chmod +x $GITHUB_WORKSPACE/formatters/ormolu
          curl -L -s -o $GITHUB_WORKSPACE/formatters/ktlint $(echo "$(curl -s "https://api.github.com/repos/pinterest/ktlint/releases/latest" | jq -c '.assets[]')" | while read i; do if [ "$(echo $i | jq -r '.name')" == "ktlint" ]; then echo $(echo $i | jq -r '.browser_download_url');fi done)
          chmod +x $GITHUB_WORKSPACE/formatters/ktlint
          cd $GITHUB_WORKSPACE
          git clone https://github.com/Koihik/LuaFormatter.git
          cd LuaFormatter
          git submodule update --init --recursive
          cmake -GNinja -DBUILD_TESTS=OFF -DCOVERAGE=OFF .
          ninja -j75
          cp lua-format $GITHUB_WORKSPACE/formatters
          cd $GITHUB_WORKSPACE
          tar -czvf $GITHUB_WORKSPACE/formatters.tar.gz $GITHUB_WORKSPACE/formatters
          sha256sum $GITHUB_WORKSPACE/formatters.tar.gz > $GITHUB_WORKSPACE/formatters.sha2
      - uses: actions/upload-artifact@v2
        with:
          name: formatters.tar.gz
          path: formatters.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: formatters.sha2
          path: formatters.sha2
